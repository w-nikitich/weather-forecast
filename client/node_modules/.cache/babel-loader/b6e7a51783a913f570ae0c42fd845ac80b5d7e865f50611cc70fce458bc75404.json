{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\weather_forecast\\\\weather-app\\\\client\\\\src\\\\components\\\\WeatherInput.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { DEFAULT_CITY, DEFAULT_COUNTRY } from \"../config\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport WeatherOutput from './WeatherOutput';\nimport { WEATHER_DATA, DAY_OF_WEEK } from '../constants.js';\nimport * as http from '../http';\nimport * as helpers from '../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherInput() {\n  _s();\n  const localStorageCity = localStorage.getItem('city') || DEFAULT_CITY;\n  const localStorageCountry = localStorage.getItem('country') || DEFAULT_COUNTRY;\n  const [city, setCity] = useState(localStorageCity);\n  const [country, setCountry] = useState(localStorageCountry);\n  const [location, setLocation] = useState([localStorageCity, localStorageCountry]);\n  const [forecast, setForecast] = useState([{\n    day: 'current',\n    temp: '',\n    minTemp: '',\n    maxTemp: '',\n    feels_like: '',\n    descr: '',\n    icon: ''\n  }]);\n  useEffect(() => {\n    async function fetchData() {\n      await getWeatherData();\n    }\n    fetchData();\n    forecast.forEach((value, index) => {\n      /*#__PURE__*/_jsxDEV(WeatherOutput, {\n        forecastData: value,\n        day: value.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    });\n  }, []);\n  useEffect(() => {\n    const locationArr = location[0].split(/,|, | /);\n    const locationCity = locationArr[0];\n    const locationCountry = locationArr[1];\n    setCity(locationCity);\n    setCountry(locationCountry);\n  }, [forecast, location]);\n  useEffect(() => {\n    localStorage.setItem('city', city);\n  }, [city]);\n  useEffect(() => {\n    localStorage.setItem('country', country);\n  }, [country]);\n  function changeHandler(event) {\n    setLocation([event.target.value]);\n  }\n  async function getWeatherData() {\n    let cityStr = document.getElementsByClassName('weather__location')[0].getElementsByTagName('p')[0].innerHTML;\n    try {\n      cityStr = `Your city: ${city}`;\n      const locationRes = await http.getLocation(city);\n      const weatherRes = await http.getWeather(locationRes);\n      const forecastRes = await http.getForecast(locationRes);\n      const updateForecast = [{\n        day: 'current',\n        temp: weatherRes.main.temp,\n        feels_like: weatherRes.main.feels_like,\n        descr: weatherRes.weather[0].main,\n        icon: helpers.getAppropriateIcon(WEATHER_DATA, weatherRes.weather[0].main)\n      }];\n      for (const day of forecastRes) {\n        updateForecast.push({\n          day: DAY_OF_WEEK[await helpers.getShortNameOfDay(day.date_epoch)],\n          temp: day.hour[6].temp_c,\n          minTemp: day.day.mintemp_c,\n          maxTemp: day.day.maxtemp_c,\n          feels_like: day.hour[6].feelslike_c,\n          descr: day.hour[6].condition.text,\n          icon: helpers.getAppropriateIcon(WEATHER_DATA, day.hour[6].condition.text)\n        });\n      }\n      setForecast(updateForecast);\n    } catch (error) {\n      cityStr = 'Sorry, there is not such city.';\n    }\n  }\n  async function searchLocation(event) {\n    if (event.key == 'Enter') {\n      await getWeatherData();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather__location\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your city and country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: location,\n          onChange: changeHandler,\n          placeholder: \"Enter location\",\n          onKeyDown: searchLocation,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your city: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather__forecast\",\n        children: new Array(forecast.length).fill().map((value, index) => /*#__PURE__*/_jsxDEV(WeatherOutput, {\n          forecastData: forecast[index],\n          day: forecast[index].day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 78\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherInput, \"NDrzygDqFnCIGlylqDA936oLLAI=\");\n_c = WeatherInput;\nexport default WeatherInput;\nvar _c;\n$RefreshReg$(_c, \"WeatherInput\");","map":{"version":3,"names":["axios","React","useEffect","useState","DEFAULT_CITY","DEFAULT_COUNTRY","Container","WeatherOutput","WEATHER_DATA","DAY_OF_WEEK","http","helpers","jsxDEV","_jsxDEV","WeatherInput","_s","localStorageCity","localStorage","getItem","localStorageCountry","city","setCity","country","setCountry","location","setLocation","forecast","setForecast","day","temp","minTemp","maxTemp","feels_like","descr","icon","fetchData","getWeatherData","forEach","value","index","forecastData","fileName","_jsxFileName","lineNumber","columnNumber","locationArr","split","locationCity","locationCountry","setItem","changeHandler","event","target","cityStr","document","getElementsByClassName","getElementsByTagName","innerHTML","locationRes","getLocation","weatherRes","getWeather","forecastRes","getForecast","updateForecast","main","weather","getAppropriateIcon","push","getShortNameOfDay","date_epoch","hour","temp_c","mintemp_c","maxtemp_c","feelslike_c","condition","text","error","searchLocation","key","className","children","onChange","placeholder","onKeyDown","type","Array","length","fill","map","_c","$RefreshReg$"],"sources":["D:/GitHub/weather_forecast/weather-app/client/src/components/WeatherInput.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { DEFAULT_CITY, DEFAULT_COUNTRY } from \"../config\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport WeatherOutput from './WeatherOutput';\r\nimport {WEATHER_DATA, DAY_OF_WEEK} from '../constants.js';\r\nimport * as http from '../http';\r\nimport * as helpers from '../helpers';\r\n\r\nfunction WeatherInput() {\r\n    const localStorageCity = localStorage.getItem('city') || DEFAULT_CITY; \r\n    const localStorageCountry = localStorage.getItem('country') || DEFAULT_COUNTRY;\r\n    const [city, setCity] = useState(localStorageCity); \r\n    const [country, setCountry] = useState(localStorageCountry); \r\n    const [location, setLocation] = useState([localStorageCity, localStorageCountry]);\r\n    const [forecast, setForecast] = useState([{\r\n        day: 'current',\r\n        temp: '',\r\n        minTemp: '',\r\n        maxTemp: '',\r\n        feels_like: '',\r\n        descr: '',\r\n        icon: ''\r\n    }]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await getWeatherData();\r\n         }\r\n         fetchData();\r\n \r\n         forecast.forEach((value, index) => {\r\n             <WeatherOutput forecastData={value} day={value.day}/>\r\n         });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const locationArr = location[0].split(/,|, | /)\r\n        const locationCity = locationArr[0];\r\n        const locationCountry = locationArr[1];\r\n        setCity(locationCity);\r\n        setCountry(locationCountry);\r\n\r\n    }, [forecast, location]); \r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('city', city);\r\n    }, [city]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('country', country);\r\n    }, [country]);\r\n\r\n    function changeHandler(event) {\r\n        setLocation([event.target.value]);\r\n    }\r\n\r\n    async function getWeatherData() {\r\n        let cityStr = document.getElementsByClassName('weather__location')[0].getElementsByTagName('p')[0].innerHTML;\r\n\r\n        try {\r\n            cityStr = `Your city: ${city}`; \r\n\r\n            const locationRes = await http.getLocation(city);\r\n            const weatherRes = await http.getWeather(locationRes);\r\n            const forecastRes = await http.getForecast(locationRes);\r\n            const updateForecast = [{\r\n                day: 'current',\r\n                temp: weatherRes.main.temp, \r\n                feels_like: weatherRes.main.feels_like, \r\n                descr: weatherRes.weather[0].main, \r\n                icon: helpers.getAppropriateIcon(WEATHER_DATA, weatherRes.weather[0].main)\r\n            }]\r\n\r\n            for (const day of forecastRes) {   \r\n                updateForecast.push({\r\n                    day: DAY_OF_WEEK[await helpers.getShortNameOfDay(day.date_epoch)],\r\n                    temp: day.hour[6].temp_c,\r\n                    minTemp: day.day.mintemp_c,\r\n                    maxTemp: day.day.maxtemp_c,\r\n                    feels_like: day.hour[6].feelslike_c,\r\n                    descr: day.hour[6].condition.text,\r\n                    icon: helpers.getAppropriateIcon(WEATHER_DATA, day.hour[6].condition.text)\r\n                })\r\n            }\r\n            \r\n\r\n            setForecast(updateForecast);\r\n\r\n        }\r\n        catch (error) {\r\n            cityStr = 'Sorry, there is not such city.';\r\n        }\r\n    }\r\n\r\n    async function searchLocation(event) {\r\n        if (event.key == 'Enter') {\r\n            await getWeatherData();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"weather\">\r\n            <Container>\r\n                <div className=\"weather__location\">\r\n                    <p>Enter your city and country</p>\r\n                    <input \r\n                    value={location}\r\n                    onChange={changeHandler}\r\n                    placeholder=\"Enter location\"\r\n                    onKeyDown = {searchLocation}\r\n                    type=\"text\"/>\r\n\r\n                    <p>Your city: <span>{city}</span></p>\r\n                </div>\r\n                <div className=\"weather__forecast\">\r\n                    {new Array(forecast.length).fill().map((value, index) => <WeatherOutput forecastData={forecast[index]} day={forecast[index].day}/>)}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}